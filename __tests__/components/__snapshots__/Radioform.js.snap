// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Radioform component renders correctly 1`] = `
<View
  style={
    Array [
      undefined,
      undefined,
      false,
    ]
  }
>
  <View
    style={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "flexDirection": "row",
            "marginBottom": 5,
          },
          undefined,
          false,
        ]
      }
    >
      <View
        style={undefined}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "borderColor": "#2196f3",
              "borderRadius": 12,
              "borderWidth": 1.5,
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 10,
                },
                Object {
                  "backgroundColor": "#2196f3",
                  "height": 20,
                  "width": 20,
                },
                Object {
                  "borderRadius": 8,
                  "height": 16,
                  "width": 16,
                },
                Object {
                  "backgroundColor": "#2196f3",
                },
              ]
            }
          />
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            undefined,
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "flexDirection": "row",
            },
          ]
        }
        testID={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "lineHeight": 20,
                "paddingLeft": 10,
              },
              false,
              Object {
                "color": undefined,
              },
              undefined,
            ]
          }
        >
          Option 1
        </Text>
      </View>
    </View>
  </View>
  <View
    style={undefined}
  >
    <View
      style={
        Array [
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "flexDirection": "row",
            "marginBottom": 5,
          },
          undefined,
          false,
        ]
      }
    >
      <View
        style={undefined}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "borderColor": "#2196f3",
              "borderRadius": 12,
              "borderWidth": 1.5,
              "height": 24,
              "justifyContent": "center",
              "opacity": 1,
              "width": 24,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <View
            style={
              Array [
                Object {
                  "borderRadius": 10,
                },
                false,
                false,
                false,
              ]
            }
          />
        </View>
      </View>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            undefined,
            Object {
              "alignItems": "center",
              "alignSelf": "center",
              "flexDirection": "row",
            },
          ]
        }
        testID={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "lineHeight": 20,
                "paddingLeft": 10,
              },
              false,
              Object {
                "color": undefined,
              },
              undefined,
            ]
          }
        >
          Option 2
        </Text>
      </View>
    </View>
  </View>
</View>
`;
