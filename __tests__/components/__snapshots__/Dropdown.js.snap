// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Dropdown renders correctly when disabled 1`] = `
<View
  animated={true}
  defaultIndex={-1}
  defaultValue="some value"
  disabled={true}
  dropdownStyle={undefined}
  keyboardShouldPersistTaps="never"
  onPress={[Function]}
  onSelect={[Function]}
  options={
    Array [
      "test1",
      "test2",
    ]
  }
  renderButtonText={[Function]}
  renderRow={[Function]}
  renderSeparator={[Function]}
  scrollEnabled={true}
  showsVerticalScrollIndicator={true}
  style={undefined}
  textStyle={undefined}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={undefined}
      >
        some value
      </Text>
      <View
        onPress={undefined}
        style={
          Array [
            false,
            false,
            false,
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
        underlayColor="white"
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "black",
                "fontSize": 24,
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ],
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Dropdown renders correctly when not disabled 1`] = `
<View
  animated={true}
  defaultIndex={-1}
  defaultValue="some value"
  disabled={false}
  dropdownStyle={undefined}
  keyboardShouldPersistTaps="never"
  onPress={[Function]}
  onSelect={[Function]}
  options={
    Array [
      "test1",
      "test2",
    ]
  }
  renderButtonText={[Function]}
  renderRow={[Function]}
  renderSeparator={[Function]}
  scrollEnabled={true}
  showsVerticalScrollIndicator={true}
  style={undefined}
  textStyle={undefined}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    isTVSelectable={true}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "opacity": 1,
      }
    }
    testID={undefined}
    tvParallaxProperties={undefined}
  >
    <View
      style={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={undefined}
      >
        some value
      </Text>
      <View
        onPress={undefined}
        style={
          Array [
            false,
            false,
            false,
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            },
            undefined,
          ]
        }
        underlayColor="white"
      >
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "black",
                "fontSize": 24,
              },
              Array [
                Object {
                  "backgroundColor": "transparent",
                },
                undefined,
              ],
              Object {
                "fontFamily": "Material Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </View>
    </View>
  </View>
</View>
`;

exports[`Dropdown renders even rows correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        undefined,
        Object {
          "backgroundColor": "white",
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          undefined,
          Object {
            "color": undefined,
          },
        ]
      }
    >
      test2
    </Text>
  </View>
</View>
`;

exports[`Dropdown renders odd rows correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        undefined,
        Object {
          "backgroundColor": "#eef8ff",
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          undefined,
          false,
        ]
      }
    >
      test1
    </Text>
  </View>
</View>
`;

exports[`Dropdown renders row with selected value correctly 1`] = `
<View
  accessibilityComponentType={undefined}
  accessibilityLabel={undefined}
  accessibilityTraits={undefined}
  accessible={true}
  hasTVPreferredFocus={undefined}
  hitSlop={undefined}
  isTVSelectable={true}
  nativeID={undefined}
  onLayout={undefined}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Array [
      Object {
        "backgroundColor": "transparent",
      },
      undefined,
    ]
  }
  testID={undefined}
  tvParallaxProperties={undefined}
>
  <View
    style={
      Array [
        undefined,
        Object {
          "backgroundColor": "#eef8ff",
        },
      ]
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Array [
          undefined,
          false,
        ]
      }
    >
      test1
    </Text>
    <View
      onPress={undefined}
      style={
        Array [
          false,
          false,
          false,
          Object {
            "alignItems": "center",
            "backgroundColor": "transparent",
            "justifyContent": "center",
          },
          undefined,
        ]
      }
      underlayColor="white"
    >
      <Text
        accessible={true}
        allowFontScaling={false}
        ellipsizeMode="tail"
        style={
          Array [
            Object {
              "color": "black",
              "fontSize": 24,
            },
            Array [
              Object {
                "backgroundColor": "transparent",
              },
              undefined,
            ],
            Object {
              "fontFamily": "Feather",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
          ]
        }
      >
        
      </Text>
    </View>
  </View>
</View>
`;
